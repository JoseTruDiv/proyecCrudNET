// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoCrud.Data.Libreria;

#nullable disable

namespace ProyectoCrud.Migrations
{
    [DbContext(typeof(LibreriaDbContext))]
    [Migration("20250717170226_InitialMySqlMigration4")]
    partial class InitialMySqlMigration4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProyectoCrud.AutorModel.Model.Autor", b =>
                {
                    b.Property<int>("idAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idAutor"));

                    b.Property<string>("fecha_nacimiento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nacionalidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("idAutor");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("ProyectoCrud.LibroModel.Model.Libro", b =>
                {
                    b.Property<int>("idLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idLibro"));

                    b.Property<string>("anio_pub")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("genero")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("idAutor")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("idLibro");

                    b.HasIndex("idAutor");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("ProyectoCrud.PrestamoModel.Model.Prestamo", b =>
                {
                    b.Property<int>("idPrestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idPrestamo"));

                    b.Property<int?>("LibroidLibro")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioidUser")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("fecha_devolucion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fecha_prestamo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("idLibro")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idPrestamo");

                    b.HasIndex("LibroidLibro");

                    b.HasIndex("UsuarioidUser");

                    b.HasIndex("idLibro");

                    b.HasIndex("idUsuario");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("ProyectoCrud.UsuarioModel.Model.Usuario", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idUser"));

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("fecha_reg")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("idUser");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoCrud.LibroModel.Model.Libro", b =>
                {
                    b.HasOne("ProyectoCrud.AutorModel.Model.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("idAutor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("ProyectoCrud.PrestamoModel.Model.Prestamo", b =>
                {
                    b.HasOne("ProyectoCrud.LibroModel.Model.Libro", null)
                        .WithMany("Prestamos")
                        .HasForeignKey("LibroidLibro");

                    b.HasOne("ProyectoCrud.UsuarioModel.Model.Usuario", null)
                        .WithMany("Prestamos")
                        .HasForeignKey("UsuarioidUser");

                    b.HasOne("ProyectoCrud.LibroModel.Model.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("idLibro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProyectoCrud.UsuarioModel.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Libro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoCrud.AutorModel.Model.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("ProyectoCrud.LibroModel.Model.Libro", b =>
                {
                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("ProyectoCrud.UsuarioModel.Model.Usuario", b =>
                {
                    b.Navigation("Prestamos");
                });
#pragma warning restore 612, 618
        }
    }
}
